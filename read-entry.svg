<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="441px" height="261px" viewBox="-0.5 -0.5 441 261" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-03-01T15:23:48.548Z&quot; agent=&quot;5.0 (Macintosh)&quot; version=&quot;16.6.4&quot; etag=&quot;FYgF-sakhKJX3iKbUU9x&quot; type=&quot;google&quot;&gt;&lt;diagram id=&quot;tdkil6CQj9AaYWMoBRj4&quot;&gt;7RzbUuJK8FvOA1X64BYkXB8V1N0qtSzZrfM8JE0y5SSDk0Fwv/7MLYQcCIpEM0qqUhB6bt09fZsL3XCH0fKaoVl4S30gDafpLxvuqOE4bs9pii8JedEQx3XaGhIw7GtYKwOM8V8wQNMwmGMfklxFTinheJYHejSOweM5GGKMLvLVppTkR52hADYAYw+RTei/2OehhvadXgb/CTgI05Fb3YEuiVBa2VCShMinizWQe9lwh4xSrt+i5RCI5F7KF93uqqB0hRiDmL+lgaMbPCMyN7Q1nC4RTS9mDCR+/MUQ3X2aS6QuJsh7DBidx/6ZRwllDfdc1GPB5KQthhqK93Zbf3ecU1FfTUOuXqvf0xXWX0zVKY352RRFmLzoBmJgFM1EoRkeTyJJIIGlZCeN6f8r6B5lSTJDHqx1myg5kp32ZksF767adAPzrWgXLeOtxG9Q0tHD9fuGkG5nnZCFEQJZf6KELENG9y1LMEcEe3sh+kzFBCrmEA2+0ii/j4xBOg09Q47jDk73wgfHmGPEoSSEnObAYNQxstRqOvthdHIq+dNbDT1hWwfeUzCqp0vN+uopBavKpJjQOCgmI4Ylv4wTiCYEhiGKA2mPFB3NvfnuGr73U/63WvuxPeGICWw4e/nlF7Jd9owtR9ItTSM25dB6geMhTgoY8+Pzp4vB0xwS/htHcIeEu9qh0e8TKCfFbOCYF8fdD8VbEa/84ZiUxrXDXU1MF79iyS97bLL0NTZrm4nLRPcp87s5Ag/SqRuccHumYhUNkjLd9uGKdEHpI4YdvqM6TmUCthU1MC743X6tMmsfz+VSx2bFrIgxPt3haiqQxO8epX+fiB1PrZKckwJU0iBc2att64hPx/QoVqN7yfzBfuXwUDIAfgN+AOwWOPIRR/YwtjCkrCDiFmxK9efcolBvh/JXod6fGWdsf8rcMDk84s1rlmWLSCHSd4VuwV7Rrk3kW0zkaiPumMxABVH76HiimXKi9nYarac7Mq3OoMSNGKWnavv3Qe8s7gq+RC3rpLJe1pRr/g/fop4hhggB8gDIoq2rejG1XZ+/3g4dLEpUvMNj1vs1cV/ZUFvEo8gqZAvp4XsigYNtBAnLiutLwEX5wNePaOvI8KMjwy+/1QkkAauigtrj1R6vdI83ll4u9qD2eLXHqz1evRfyZu5WvjRN4KksLTx8mxT5Fi2Pi82mcpnHYwmE2buQz8eMU8fV74qAFiEmdgXWO28R5O+TVXSxF2L/tbvH312r97ToJh4erDiep+4gCZb/ppFPk6ld0SYPpTxL64oh+VEW8eUcAH4sH8o/IqnKKk0p+xI2aW+G2nbmJFfs55UY0eKAsRrreVxHGMUiUUG4zqw6zvrsvw/UB7QfZZ3/+Xyrlj+h3cEjHcbqz42fFZhjj2Ch/kO+LEC5mlthQxpPLZKz0m6BlvFvNeSPZ+DNCeL4GYy7v6dClV/smUKc3DNI5J/fLZrEo3P2Nm4XZqL7GyWPO1CraI1f28PaHn7IFNo4fcdlAl81h1U4SpOxY1OE7eGuPfcg7TTOYy8Ef06AWTRluy/lH90RVBU26ZsfRn9D8jKSCpAR4JnMx5VCnRxmjkrHBTKlV6uhTtikXVfJr0YLhuQSP+QRMcUSqSuTYWskk4/IxCN36l7SA43E2LrKWKE96omfiOBAgEcEpnL4Z2Ace4icGzCncoQpJmSoWSNQcp2+47ltyUfO6COkJTGNQfbIPNO/o1nt4Ti4Ud0riMlKJgaCpSZxS2az1ipfWrS8BhqB3l82Dc56Td0kTTLXahvAIkvZ1nYNLFxL1+Z0DBCZNHHBqvMsk5p4McnU0p9Z0jZVdp3lvnMv/wM=&lt;/diagram&gt;&lt;/mxfile&gt;"><defs/><g><rect x="5" y="5" width="430" height="250" rx="5" ry="5" fill="#282c34" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 426px; height: 1px; padding-top: 12px; margin-left: 9px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 7px; font-family: Times New Roman; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;ibm plex mono&quot; , monospace ; font-size: 7px"><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">void </span><span style="color: rgb(97 , 175 , 239) ; font-size: 7px">initiate</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">() {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">    </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">long </span>nextEnsembleChange = <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">startEntryId</span>, i = <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">startEntryId</span>;<br style="font-size: 7px" />    <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">this</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">requestTimeNanos </span>= <span style="color: rgb(229 , 192 , 123) ; font-size: 7px">MathUtils</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">nowInNano</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>;<br style="font-size: 7px" />    <span style="color: rgb(180 , 207 , 176) ; font-style: italic ; font-size: 7px">List</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">&lt;</span><span style="color: rgb(229 , 192 , 123) ; font-size: 7px">BookieId</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">&gt; </span>ensemble = <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">null</span>;<br style="font-size: 7px" />    <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">do </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">{<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">        </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">if </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>i == nextEnsembleChange<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">) {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">            </span>ensemble = <span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getLedgerMetadata</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getEnsembleAt</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>i<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />            nextEnsembleChange = <span style="color: rgb(229 , 192 , 123) ; font-size: 7px">LedgerMetadataUtils</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getNextEnsembleChange</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span><span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getLedgerMetadata</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>, i<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">}<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">        </span><span style="color: rgb(148 , 180 , 159) ; font-style: italic ; font-size: 7px">LedgerEntryRequest </span>entry;<br style="font-size: 7px" />        <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">if </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span><span style="color: rgb(239 , 89 , 111) ; font-size: 7px">parallelRead</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">) {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">            </span>entry = <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">new </span><span style="color: rgb(229 , 192 , 123) ; font-size: 7px">ParallelReadRequest</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>ensemble, <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">lh</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">ledgerId</span>, i<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">} </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">else </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">{<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">            </span>entry = <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">new </span><span style="color: rgb(229 , 192 , 123) ; font-size: 7px">SequenceReadRequest</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>ensemble, <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">lh</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">ledgerId</span>, i<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">}<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">        </span><span style="color: rgb(239 , 89 , 111) ; font-size: 7px">seq</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">add</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>entry<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        i++;<br style="font-size: 7px" />    <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">} </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">while </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>i &lt;= <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">endEntryId</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />    <span style="color: rgb(92 , 99 , 112) ; font-style: italic ; font-size: 7px">// read the entries.<br style="font-size: 7px" /></span><span style="color: rgb(92 , 99 , 112) ; font-style: italic ; font-size: 7px">    </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">for </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span><span style="color: rgb(148 , 180 , 159) ; font-style: italic ; font-size: 7px">LedgerEntryRequest </span>entry : <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">seq</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">) {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">        </span>entry.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">read</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>;<br style="font-size: 7px" />        <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">if </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>!<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">parallelRead </span>&amp;&amp; <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">clientCtx</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getConf</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">readSpeculativeRequestPolicy</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">isPresent</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()) {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">            </span><span style="color: rgb(239 , 89 , 111) ; font-size: 7px">speculativeTask </span>= <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">clientCtx</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getConf</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">readSpeculativeRequestPolicy</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">get</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">                </span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">initiateSpeculativeRequest</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span><span style="color: rgb(239 , 89 , 111) ; font-size: 7px">clientCtx</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getScheduler</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>, entry<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">}<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">    }<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">}</span></pre></div></div></div></foreignObject><text x="9" y="19" fill="rgb(0, 0, 0)" font-family="Times New Roman" font-size="7px">void initiate() {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>