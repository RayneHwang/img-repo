<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background-color: rgb(255, 255, 255);" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="442px" height="262px" viewBox="-0.5 -0.5 442 262" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-03-01T15:25:46.585Z&quot; agent=&quot;5.0 (Macintosh)&quot; version=&quot;16.6.4&quot; etag=&quot;RaG6Hj4im6e907wHLlZh&quot; type=&quot;google&quot;&gt;&lt;diagram id=&quot;QyGHeRgMfVJK86XwFjz-&quot;&gt;7RzbbqM68FvOQ6T2oasAuT62Sdtdqa2qZlfn2YEJWDU4NU6T7tcfG5sQTkLaFFrcBgklMPgyM56bL0zLGYWra4bmwS31gLTstrdqOeOWbds9ZyD+JORFQay+NVQQn2FPwzLABP8FDWxr6AJ7EOcKckoJx/M80KVRBC7PwRBjdJkvNqMk3+sc+bAFmLiIbEP/xR4PFHRg9zP4T8B+kPZs9TR9IUoLa0riAHl0uQFyLlvOiFHK1V24GgGR3Ev5oupdFbxdI8Yg4m+pYKsKz4gsNG0tu0dE1Ys5A4kff9FE954WEqmLKXIffUYXkXfmUkJZyzkX5Zg/PemIrkbivtNR/137VJRPhiFXzhr0VYHNG110RiN+NkMhJi+qgugYhXPxUnePp6EkkMBKspNG9P8FVIvyTTxHLmw0GydyJBvtz1cJvLeu0/P1f0K7qBntJH6Lkq7qbjDQhPS6m4QstRDI8tNEyDJkVNvyDeaIYPcgRJ+pGMCEOUSBrxTK7yNjmA5DX5NjO8PTg/DBEeYYcagIIbs91Bh1tSxZbfswjE5OJX/6666nbGfHBwpG/XQlo76+KsGqNikmNPKLyYhgxS+jGMIpgVGAIl/ao4SO9sF8dzTfByn/LeswtsccMYENZy+/vEK2y5ax4Ug6lWnEthwaL3A8wHEBY358/nAxeFpAzH/jEO6QcFd7NPp9AmWnmA1tfWM7h6F4K+KVPxyTyrhW3tVEdPkrkvwyxyZLX2Oytum4TDSfMr+XI7CUTt3gmJszFOtokFTptssr0gWljxj2+I76OJUJ2E7UQLvgd/u12qx9tJBTHZMVsybGeHSPq6lBEr97lP59InY8M0pyTgpQSYPwxF7tmkd8OqZHMRs9SOZL+5XyoaQP/AY8H9gtcOQhjsxhbGFIWUPELdiU6s+5QaHeHuWvQ70/M87YfVW5YFI+4s1rlmGTSCHSd4VuwVzRbkzkW0zkeiHumMxADVH7+HiimWqi9k4aracrMlZ3WOFCTKKnyfLvg1pZ3Bd8iVLGSWUzranW/Jdfop4jhggB8gDIoKWrZjK1W5+/3godLCtUvPIx6/2GuK9tqCniUWQVson06D2RQGkbQYKq4voKcEl84OtbtE1k+NGR4Zdf6gQSg1FRQePxGo9XucebSC8XudB4vMbjNR6vWQt5M3drn5rG8FSVFpZfJkWeQdPjYrOZuMzjsQTC7F3I62P6aeLqd0VAywATswLrvacI8ufJajrYC5H32tnj767VB1p0HQ8P1xzPU1dKguXXNPJqs2RVtM0DKc/SumKIf1RFfDUbgB/Lh+q3SOqySjPKvoRNOpihpu05yRn7eS1GtDhgrMd6HtcWRrFI1BCuM6O2sz7784Fmg/ajrPM/n2/V8ju0e3ikwlj1u/VYgzl2CRbqP+KrApTrORU2otHMIDmr7BRoFV+rIW8yB3dBEMfPoN39PRWq/GLOEOL4nkEsP343aBCPztmbuFyYie5vFD/uQa2mOX5jDxt7+CFDaOLwHZcJfNUc1uEodcaObRE2h7vmnIM00zhP3AC8BQFm0JDtP5R/dFtQddikb74Z/Q3Jy0gqQEaA5zIfVwq1c5jZSToukCm9rFaywybtepL8arxkSE7xAx4S/VoidaUzbI1l8hGZeOQuOZf0QEPRtyoySdAe98UjItgX4DGBmez+GRjHLiLnGsyp7GGGCRkp1giUHHtgu05H8pEz+gjpm4hGIFtkrm7fVqx2ceTfJM0nEJ2VTHQEK0Xijsxm1jpfWri6BhqCWl/WFc76bVVFJ5mzrY4GLLOUbR1Hw4KNdG12VwORThPnrxvPMqmJG51MLX3MkrYl766z3HfO5X8=&lt;/diagram&gt;&lt;/mxfile&gt;"><defs/><g><rect x="5" y="5" width="430" height="250" rx="5" ry="5" fill="#282c34" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 426px; height: 1px; padding-top: 12px; margin-left: 9px;"><div style="box-sizing: border-box; font-size: 0px; text-align: left;" data-drawio-colors="color: rgb(0, 0, 0); "><div style="display: inline-block; font-size: 7px; font-family: Times New Roman; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><pre style="background-color: rgb(40 , 44 , 52) ; color: rgb(187 , 187 , 187) ; font-family: &quot;ibm plex mono&quot; , monospace ; font-size: 7px"><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">void </span><span style="color: rgb(97 , 175 , 239) ; font-size: 7px">initiate</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">() {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">    </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">long </span>nextEnsembleChange = <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">startEntryId</span>, i = <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">startEntryId</span>;<br style="font-size: 7px" />    <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">this</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">requestTimeNanos </span>= <span style="color: rgb(229 , 192 , 123) ; font-size: 7px">MathUtils</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">nowInNano</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>;<br style="font-size: 7px" />    <span style="color: rgb(180 , 207 , 176) ; font-style: italic ; font-size: 7px">List</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">&lt;</span><span style="color: rgb(229 , 192 , 123) ; font-size: 7px">BookieId</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">&gt; </span>ensemble = <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">null</span>;<br style="font-size: 7px" />    <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">do </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">{<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">        </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">if </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>i == nextEnsembleChange<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">) {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">            </span>ensemble = <span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getLedgerMetadata</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getEnsembleAt</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>i<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />            nextEnsembleChange = <span style="color: rgb(229 , 192 , 123) ; font-size: 7px">LedgerMetadataUtils</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getNextEnsembleChange</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span><span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getLedgerMetadata</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>, i<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">}<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">        </span><span style="color: rgb(148 , 180 , 159) ; font-style: italic ; font-size: 7px">LedgerEntryRequest </span>entry;<br style="font-size: 7px" />        <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">if </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span><span style="color: rgb(239 , 89 , 111) ; font-size: 7px">parallelRead</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">) {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">            </span>entry = <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">new </span><span style="color: rgb(229 , 192 , 123) ; font-size: 7px">ParallelReadRequest</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>ensemble, <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">lh</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">ledgerId</span>, i<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">} </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">else </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">{<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">            </span>entry = <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">new </span><span style="color: rgb(229 , 192 , 123) ; font-size: 7px">SequenceReadRequest</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>ensemble, <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">lh</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">ledgerId</span>, i<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">}<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">        </span><span style="color: rgb(239 , 89 , 111) ; font-size: 7px">seq</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">add</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>entry<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        i++;<br style="font-size: 7px" />    <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">} </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">while </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>i &lt;= <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">endEntryId</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />    <span style="color: rgb(92 , 99 , 112) ; font-style: italic ; font-size: 7px">// read the entries.<br style="font-size: 7px" /></span><span style="color: rgb(92 , 99 , 112) ; font-style: italic ; font-size: 7px">    </span><span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">for </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span><span style="color: rgb(148 , 180 , 159) ; font-style: italic ; font-size: 7px">LedgerEntryRequest </span>entry : <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">seq</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">) {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">        </span>entry.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">read</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>;<br style="font-size: 7px" />        <span style="color: rgb(185 , 88 , 165) ; font-weight: bold ; font-style: italic ; font-size: 7px">if </span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span>!<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">parallelRead </span>&amp;&amp; <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">clientCtx</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getConf</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">readSpeculativeRequestPolicy</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">isPresent</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()) {<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">            </span><span style="color: rgb(239 , 89 , 111) ; font-size: 7px">speculativeTask </span>= <span style="color: rgb(239 , 89 , 111) ; font-size: 7px">clientCtx</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getConf</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>.<span style="color: rgb(239 , 89 , 111) ; font-size: 7px">readSpeculativeRequestPolicy</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">get</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">                </span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">initiateSpeculativeRequest</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">(</span><span style="color: rgb(239 , 89 , 111) ; font-size: 7px">clientCtx</span>.<span style="color: rgb(97 , 175 , 239) ; font-size: 7px">getScheduler</span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">()</span>, entry<span style="color: rgb(209 , 154 , 102) ; font-size: 7px">)</span>;<br style="font-size: 7px" />        <span style="color: rgb(209 , 154 , 102) ; font-size: 7px">}<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">    }<br style="font-size: 7px" /></span><span style="color: rgb(209 , 154 , 102) ; font-size: 7px">}</span></pre></div></div></div></foreignObject><text x="9" y="19" fill="rgb(0, 0, 0)" font-family="Times New Roman" font-size="7px">void initiate() {...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>